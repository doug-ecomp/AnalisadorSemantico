const palavra_reservada 1:1
{ delimitador 1:7
int palavra_reservada 2:1
a id 2:5
= operador 2:7
2 numero 2:8
; delimitador 2:9
char palavra_reservada 3:1
b id 3:6
= operador 3:8
'a' caractere_constante 3:9
; delimitador 3:12
1 numero 4:1
a id 5:1
; delimitador 5:2
char palavra_reservada 6:1
a id 6:6
= operador 6:7
5 numero 6:8
; delimitador 6:9
} delimitador 7:1
const palavra_reservada 8:1
{ delimitador 8:6
int palavra_reservada 9:1
a id 9:5
= operador 9:6
2 numero 9:7
; delimitador 9:8
} delimitador 10:1
int palavra_reservada 12:1
b id 12:5
; delimitador 12:6
int palavra_reservada 13:1
c id 13:5
; delimitador 13:6
char palavra_reservada 14:1
d id 14:6
; delimitador 14:7
float palavra_reservada 15:1
e id 15:7
; delimitador 15:8
string palavra_reservada 16:1
a1 id 16:8
; delimitador 16:10
carro id 18:1
gol id 18:7
; delimitador 18:10
asdas id 20:1
asfaf id 21:1
123 numero 22:1
void palavra_reservada 24:1
main palavra_reservada 24:6
( delimitador 24:10
) delimitador 24:11
{ delimitador 24:13
a id 25:1
; delimitador 25:2
int palavra_reservada 26:1
a id 26:5
; delimitador 26:6
if palavra_reservada 28:1
( delimitador 28:3
a id 28:4
== operador 28:5
2 numero 28:7
+ operador 28:8
2 numero 28:9
+ operador 28:10
2 numero 28:11
* operador 28:12
2 numero 28:13
&& operador 28:14
+ operador 28:16
1 numero 28:17
+ operador 28:18
1 numero 28:19
( delimitador 28:20
a id 28:21
[ delimitador 28:22
] delimitador 28:23
) delimitador 28:24
{ delimitador 28:25
a id 29:1
; delimitador 29:2
} delimitador 30:1
else palavra_reservada 30:3
{ delimitador 30:8
a id 31:1
= operador 31:2
2 numero 31:3
; delimitador 31:4
} delimitador 32:1
} delimitador 33:1
class palavra_reservada 35:1
a id 35:7
1 numero 36:1
1 numero 36:3
= operador 36:4
a id 36:5
; delimitador 36:6
a id 36:8
a id 36:10
; delimitador 36:11
a id 37:1
a id 37:3
; delimitador 37:5
a id 37:7
a id 37:9
; delimitador 37:10
a id 38:1
a id 38:3
a id 38:5
; delimitador 38:6
a id 39:1
; delimitador 39:2
int palavra_reservada 40:1
a id 40:5
; delimitador 40:6
int palavra_reservada 41:1
b id 41:5
; delimitador 41:6
} delimitador 43:1
class palavra_reservada 46:1
capim id 46:7
> operador 46:13
folha id 46:15
{ delimitador 46:21
float palavra_reservada 48:5
isGreen id 48:11
( delimitador 48:18
) delimitador 48:19
{ delimitador 48:21
return palavra_reservada 49:9
b id 49:16
; delimitador 49:17
} delimitador 50:5
} delimitador 52:1
; delimitador 52:2
; delimitador 52:3

nao ha erros lexicos
